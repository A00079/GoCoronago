{"version":3,"sources":["Components/ApplastUpdated/AppUpdated.js","Components/CovidQuotes/Covidquotes.js","Components/NavBar/NavBar.js","App.js","serviceWorker.js","Reducers/index.js","store.js","index.js"],"names":["useStyles","makeStyles","theme","appUpdateDiv","alignItems","justifyContent","appUpdateFont1","fontFamily","fontWeight","textTransform","color","breakpoints","up","marginTop","appUpdateFont2","fontSize","appUpdateFont3","marginLeft","appUpdateFont4","appUpdateFont5","ApplastUpdated","classes","Fragment","Grid","container","className","item","xs","sm","md","lg","xl","Typography","variant","banner_parent","background","height","spacing","banner","textAlign","margin","banner_text","Covidquotes","props","useState","Quotes","setQuotes","useEffect","setInterval","fetch","then","res","json","quotes","randomNum","Math","abs","floor","random","factoids","length","onClick","navbar","boxShadow","grow","flexGrow","title","display","palette","text","inherit","sectionDesktop","sectionMobile","PrimarySearchAppBar","React","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMobileMenuOpen","Boolean","renderMobileMenu","Menu","anchorEl","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","IconButton","aria-label","Badge","badgeContent","AppBar","position","Toolbar","noWrap","aria-controls","aria-haspopup","event","currentTarget","App","NavBar","window","location","hostname","match","combineReducers","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.94cd811a.chunk.js","sourcesContent":["import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appUpdateDiv:{\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    appUpdateFont1:{\r\n        fontFamily: 'archia !important',\r\n        fontWeight: '900',\r\n        textTransform: 'uppercase',\r\n        color: '#343a40',\r\n        [theme.breakpoints.up('xs')]: {\r\n            marginTop: '20px'\r\n          }\r\n    },\r\n    appUpdateFont2:{\r\n        fontFamily: 'archia !important',\r\n        fontWeight: '600',\r\n        fontSize: '11px!important',\r\n        textTransform: 'uppercase',\r\n        color: '#6c757d'\r\n    },\r\n    appUpdateFont3:{\r\n        fontFamily: 'archia !important',\r\n        color: 'rgb(40, 167, 69) !important',\r\n        fontWeight: '600',\r\n        fontSize: '11px!important',\r\n        textTransform: 'uppercase',\r\n        [theme.breakpoints.up('md')]: {\r\n            marginLeft: '90px !important',\r\n            marginTop: '40px !important'\r\n          },\r\n        [theme.breakpoints.up('xs')]: {\r\n            marginTop: '20px',\r\n            marginLeft: '50px'\r\n          }\r\n    },\r\n    appUpdateFont4:{\r\n        fontFamily: 'archia !important',\r\n        color: 'rgb(40, 167, 69)',\r\n        fontWeight: '600',\r\n        textTransform: 'uppercase',\r\n        fontSize: '11px!important',\r\n        [theme.breakpoints.up('md')]: {\r\n            marginLeft: '48px !important'\r\n          },\r\n        [theme.breakpoints.up('xs')]: {\r\n            marginLeft: '8px'\r\n          }\r\n    },\r\n    appUpdateFont5:{\r\n        fontFamily: 'archia !important',\r\n        color: 'rgb(40, 167, 69)',\r\n        fontWeight: '600',\r\n        textTransform: 'uppercase',\r\n        fontSize: '11px!important',\r\n        [theme.breakpoints.up('md')]: {\r\n            marginLeft: '78px !important'\r\n          },\r\n        [theme.breakpoints.up('xs')]: {\r\n            marginLeft: '40px'\r\n          }\r\n    }\r\n}));\r\n\r\nconst ApplastUpdated = () => {\r\n    const classes = useStyles();\r\n    return ( \r\n        <React.Fragment>\r\n            <Grid container className={classes.appUpdateDiv}>\r\n                <Grid item xs={7} sm={6} md={4} lg={6} xl={6}\r\n                >\r\n                    <Typography variant=\"h5\" className={classes.appUpdateFont1}>\r\n                        India COVID-19 Tracker\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" className={classes.appUpdateFont2}>\r\n                        A Crowdsourced Initiative\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={4} sm={6} md={3} lg={6} xl={6}> \r\n                    <Typography variant=\"h5\" className={classes.appUpdateFont3}>\r\n                        Last Updated\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" className={classes.appUpdateFont4}>\r\n                        about 16 hours Ago\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" className={classes.appUpdateFont5}>\r\n                        11 Apr, 00:20 IST\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}\r\n \r\nexport default ApplastUpdated;","import React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ApplastUpdated from '../ApplastUpdated/AppUpdated.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    banner_parent:{\r\n        background: 'rgba(32,26,162,.12549)',\r\n        height: theme.spacing(9),\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    banner: {\r\n        textAlign: 'center',\r\n        margin: theme.spacing(3),\r\n    },\r\n    banner_text:{\r\n        fontFamily: 'archia !important',\r\n        fontSize: '.8rem',\r\n        fontWeight: '600',\r\n        color: 'rgba(32,26,162,.866667)'\r\n    }\r\n}));\r\nconst Covidquotes = (props) => {\r\n    const classes = useStyles();\r\n    const [Quotes, setQuotes] = useState('Stay Home, Stay Safe.');\r\n\r\n    useEffect(() =>{\r\n        setInterval(() =>{\r\n            fetch('https://api.covid19india.org/website_data.json')\r\n            .then(res => res.json())\r\n            .then(quotes => {\r\n                let randomNum = Math.abs(Math.floor(Math.random() * (1 - quotes.factoids.length) + 1));\r\n                setQuotes(quotes.factoids[randomNum].banner)})\r\n        },4000)\r\n    },[]);\r\n    const setNewQuote = () =>{\r\n        fetch('https://api.covid19india.org/website_data.json')\r\n            .then(res => res.json())\r\n            .then(quotes => {\r\n            let randomNum = Math.abs(Math.floor(Math.random() * (1 - quotes.factoids.length) + 1));\r\n            setQuotes(quotes.factoids[randomNum].banner)\r\n        })\r\n    }\r\n    return ( \r\n        <React.Fragment>\r\n            <Grid container className={classes.banner_parent} onClick={() => setNewQuote()}>\r\n                <Grid item xs={12} sm={12} md={12} lg={12} xl={12} className={classes.banner}>\r\n                    <Typography className={classes.banner_text}>\r\n                       {Quotes}\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <ApplastUpdated />\r\n        </React.Fragment>\r\n     );\r\n}\r\n\r\nexport default Covidquotes;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport Covidquotes from '../CovidQuotes/Covidquotes.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  navbar:{\r\n    boxShadow: '1px 0px 1px black !important'\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    fontFamily: 'archia !important',\r\n    display: 'block',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n    color: theme.palette.text.inherit,\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\nconst PrimarySearchAppBar =  () => {\r\n  const classes = useStyles();\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n          <Badge badgeContent={11} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\" color=\"inherit\" className={classes.navbar}>\r\n        <Toolbar>\r\n          <Typography className={classes.title}  variant=\"h6\" noWrap>\r\n            Covid-19\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n              <Badge badgeContent={4} color=\"secondary\">\r\n                <MailIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n              <Badge badgeContent={17} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Covidquotes />\r\n      {renderMobileMenu}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PrimarySearchAppBar;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport './App.css';\nimport NavBar  from '../src/Components/NavBar/NavBar.js';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\r\n\r\nexport default combineReducers({\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './Reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, initialState, compose( \r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}